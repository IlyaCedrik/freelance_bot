import 'dotenv/config';
import navigation from '../bot/utils/navigation.js';

/**
 * –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É
 */

function testNavigationSetup() {
  console.log('üß≠ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã...\n');

  // –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö action'–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã
  const expectedActions = [
    // –û—Å–Ω–æ–≤–Ω—ã–µ —ç–∫—Ä–∞–Ω—ã
    'main_menu',
    'back_to_main', 
    'categories',
    'my_subscriptions',
    'settings',
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —ç–∫—Ä–∞–Ω—ã
    'show_subscriptions',
    'show_privacy',
    'export_data',
    'delete_account_confirm',
    'delete_account_final'
  ];

  console.log('üìã –û–∂–∏–¥–∞–µ–º—ã–µ action\'—ã:');
  expectedActions.forEach(action => {
    console.log(`  ‚Ä¢ ${action}`);
  });

  console.log(`\nüìä –í—Å–µ–≥–æ –æ–∂–∏–¥–∞–µ—Ç—Å—è: ${expectedActions.length} action'–æ–≤`);

  // –ü–æ–ª—É—á–∞–µ–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ routes
  const registeredRoutes = navigation.getRoutes();
  console.log(`\n‚úÖ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ: ${registeredRoutes.length} routes`);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫–∏–µ action'—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç
  const missingActions = expectedActions.filter(action => !registeredRoutes.includes(action));
  
  if (missingActions.length > 0) {
    console.log('\n‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ action\'—ã:');
    missingActions.forEach(action => {
      console.log(`  ‚Ä¢ ${action}`);
    });
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏—à–Ω–∏–µ action'—ã
  const extraActions = registeredRoutes.filter(action => !expectedActions.includes(action));
  
  if (extraActions.length > 0) {
    console.log('\n‚ö†Ô∏è –õ–∏—à–Ω–∏–µ action\'—ã:');
    extraActions.forEach(action => {
      console.log(`  ‚Ä¢ ${action}`);
    });
  }

  // –†–µ–∑—É–ª—å—Ç–∞—Ç
  if (missingActions.length === 0 && extraActions.length === 0) {
    console.log('\n‚úÖ –í—Å–µ action\'—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!');
    return true;
  } else {
    console.log('\n‚ùå –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π action\'–æ–≤');
    return false;
  }
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞—Ä—Ç—É –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
 */
function showNavigationMap() {
  console.log('\nüó∫Ô∏è –ö–∞—Ä—Ç–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:\n');

  const navigationFlow = {
    '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (/start)': {
      actions: ['categories', 'my_subscriptions', 'settings'],
      description: '–û—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã –±–æ—Ç–∞'
    },
    '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏': {
      actions: ['main_menu', 'subscribe_X', 'unsubscribe_X'],
      description: '–ü—Ä–æ—Å–º–æ—Ç—Ä –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏'
    },
    '–ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏': {
      actions: ['main_menu', 'cancel_subscription_X'],
      description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã–º–∏ –ø–æ–¥–ø–∏—Å–∫–∞–º–∏'
    },
    '–ù–∞—Å—Ç—Ä–æ–π–∫–∏': {
      actions: ['back_to_main', 'show_subscriptions', 'show_privacy', 'export_data', 'delete_account_confirm'],
      description: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞ –∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏'
    },
    '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è': {
      actions: ['delete_account_final', 'settings'],
      description: '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞'
    }
  };

  Object.entries(navigationFlow).forEach(([screen, info]) => {
    console.log(`üì± ${screen}:`);
    console.log(`   ${info.description}`);
    console.log(`   Actions: ${info.actions.join(', ')}`);
    console.log('');
  });
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç callback queries –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã
 */
function checkPotentialIssues() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º:\n');

  const commonIssues = [
    {
      issue: 'Callback queries –Ω–µ –æ—Ç–≤–µ—á–∞—é—Ç',
      solution: '–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—Å–µ action\'—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ navigation'
    },
    {
      issue: '–ö–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç',
      solution: '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ action —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –∏–º–µ–Ω–µ–º'
    },
    {
      issue: '–°–æ–æ–±—â–µ–Ω–∏—è –¥—É–±–ª–∏—Ä—É—é—Ç—Å—è',
      solution: '–£–±—Ä–∞—Ç—å ctx.answerCbQuery() –∏–∑ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ - —ç—Ç–æ –¥–µ–ª–∞–µ—Ç navigation'
    },
    {
      issue: '–û—à–∏–±–∫–∞ "message to edit not found"',
      solution: 'messageManager –¥–æ–ª–∂–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å fallback'
    }
  ];

  commonIssues.forEach((item, index) => {
    console.log(`${index + 1}. ‚ùó ${item.issue}`);
    console.log(`   üí° ${item.solution}\n`);
  });
}

/**
 * –°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ callback queries
 */
function generateTestCallbacks() {
  console.log('üß™ –¢–µ—Å—Ç–æ–≤—ã–µ callback queries –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:\n');

  const testCallbacks = [
    'main_menu',
    'categories', 
    'my_subscriptions',
    'settings',
    'back_to_main',
    'show_privacy',
    'export_data',
    'subscribe_1',
    'cancel_subscription_1',
    'pay_1',
    'unknown_action' // –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö action'–æ–≤
  ];

  testCallbacks.forEach(callback => {
    const registered = navigation.getRoutes().includes(callback);
    const status = registered ? '‚úÖ' : (callback === 'unknown_action' ? 'üß™' : '‚ùå');
    console.log(`${status} ${callback} ${registered ? '(–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω)' : '(–Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω)'}`);
  });

  console.log('\nüí° –¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ —ç—Ç–∏ callback\'—ã –≤ –±–æ—Ç–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏');
}

async function main() {
  try {
    console.log('üß≠ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ù–ê–í–ò–ì–ê–¶–ò–û–ù–ù–û–ô –°–ò–°–¢–ï–ú–´\n');
    console.log('='.repeat(50));
    
    const setupOk = testNavigationSetup();
    
    showNavigationMap();
    
    if (!setupOk) {
      checkPotentialIssues();
    }
    
    generateTestCallbacks();
    
    console.log('\n='.repeat(50));
    console.log(setupOk ? '‚úÖ –ù–∞–≤–∏–≥–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ' : '‚ùå –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π');
    
    process.exit(setupOk ? 0 : 1);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (import.meta.url === `file://${process.argv[1]}`) {
  main();
}

export { testNavigationSetup }; 