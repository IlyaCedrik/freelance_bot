import { Scenes, Markup } from 'telegraf';
import User from '../../database/models/User.js';
import { supabase } from '../../config/supabase.js';
import messageManager from '../utils/messageManager.js';
import notificationService from '../../services/notificationService.js';

const promoRequestScene = new Scenes.WizardScene(
  'REQUEST_PROMO_CODE',
  
  // –®–∞–≥ 1: –í–≤–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞
  async (ctx) => {
    await messageManager.sendMessage(
      ctx,
      `üìù –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞

üé´ –í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞ (—Ç–æ–ª—å–∫–æ –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã, 3-20 —Å–∏–º–≤–æ–ª–æ–≤):

–ü—Ä–∏–º–µ—Ä: NEWUSER2024, DISCOUNT50, BONUS

‚ö†Ô∏è –ü—Ä–æ–º–æ–∫–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º`,
      Markup.inlineKeyboard([
        [Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∞', 'cancel_promo_request')]
      ])
    );
    return ctx.wizard.next();
  },

  // –®–∞–≥ 2: –í–≤–æ–¥ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –±–æ–Ω—É—Å–Ω—ã—Ö –¥–Ω–µ–π
  async (ctx) => {
    const code = ctx.message?.text?.trim().toUpperCase();
    
    if (!code || !/^[A-Z0-9]{3,20}$/.test(code)) {
      await messageManager.sendMessage(
        ctx,
        '‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç! –ü—Ä–æ–º–æ–∫–æ–¥ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã (3-20 —Å–∏–º–≤–æ–ª–æ–≤)\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:'
      );
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å
    const { data: existingCode } = await supabase
      .from('referral_codes')
      .select('id')
      .eq('code', code)
      .single();

    const { data: existingRequest } = await supabase
      .from('promo_code_requests')
      .select('id')
      .eq('requested_code', code)
      .single();

    if (existingCode || existingRequest) {
      await messageManager.sendMessage(
        ctx,
        '‚ùå –ü—Ä–æ–º–æ–∫–æ–¥ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ —É–∂–µ –∑–∞–ø—Ä–æ—à–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:'
      );
      return;
    }

    ctx.wizard.state.promoCode = code;
    
    await messageManager.sendMessage(
      ctx,
      `‚úÖ –ü—Ä–æ–º–æ–∫–æ–¥: ${code}

üìÖ –°–∫–æ–ª—å–∫–æ –±–æ–Ω—É—Å–Ω—ã—Ö –¥–Ω–µ–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø—Ä–æ—Å–∏—Ç—å? (0-30):

0 - –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–Ω–µ–π
7 - –Ω–µ–¥–µ–ª—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ  
14 - –¥–≤–µ –Ω–µ–¥–µ–ª–∏ –±–µ—Å–ø–ª–∞—Ç–Ω–æ
30 - –º–µ—Å—è—Ü –±–µ—Å–ø–ª–∞—Ç–Ω–æ`,
      Markup.inlineKeyboard([
        [Markup.button.callback('0 –¥–Ω–µ–π', 'request_days_0')],
        [Markup.button.callback('7 –¥–Ω–µ–π', 'request_days_7')],
        [Markup.button.callback('14 –¥–Ω–µ–π', 'request_days_14')],
        [Markup.button.callback('30 –¥–Ω–µ–π', 'request_days_30')],
        [Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∞', 'cancel_promo_request')]
      ])
    );
    return ctx.wizard.next();
  },

  // –®–∞–≥ 3: –í–≤–æ–¥ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ —Å–∫–∏–¥–∫–∏
  async (ctx) => {
    let bonusDays;
    
    if (ctx.callbackQuery) {
      const action = ctx.callbackQuery.data;
      if (action.startsWith('request_days_')) {
        bonusDays = parseInt(action.replace('request_days_', ''));
        await ctx.answerCbQuery();
      } else if (action === 'cancel_promo_request') {
        await ctx.answerCbQuery('–ó–∞–ø—Ä–æ—Å –æ—Ç–º–µ–Ω–µ–Ω');
        await ctx.scene.leave();
        return;
      }
    } else if (ctx.message?.text) {
      bonusDays = parseInt(ctx.message.text.trim());
      if (isNaN(bonusDays) || bonusDays < 0 || bonusDays > 30) {
        await messageManager.sendMessage(
          ctx,
          '‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π! –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 30:'
        );
        return;
      }
    } else {
      return;
    }

    ctx.wizard.state.bonusDays = bonusDays;
    
    await messageManager.sendMessage(
      ctx,
      `‚úÖ –ë–æ–Ω—É—Å–Ω—ã–µ –¥–Ω–∏: ${bonusDays}

üí∞ –ö–∞–∫–æ–π –ø—Ä–æ—Ü–µ–Ω—Ç —Å–∫–∏–¥–∫–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø—Ä–æ—Å–∏—Ç—å? (0-50%):

0 - –±–µ–∑ —Å–∫–∏–¥–∫–∏
10 - —Å–∫–∏–¥–∫–∞ 10%
25 - —Å–∫–∏–¥–∫–∞ 25%  
50 - —Å–∫–∏–¥–∫–∞ 50%`,
      Markup.inlineKeyboard([
        [Markup.button.callback('0%', 'request_discount_0')],
        [Markup.button.callback('10%', 'request_discount_10')],
        [Markup.button.callback('25%', 'request_discount_25')],
        [Markup.button.callback('50%', 'request_discount_50')],
        [Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∞', 'cancel_promo_request')]
      ])
    );
    return ctx.wizard.next();
  },

  // –®–∞–≥ 4: –í–≤–æ–¥ –ª–∏–º–∏—Ç–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π
  async (ctx) => {
    let discountPercent;
    
    if (ctx.callbackQuery) {
      const action = ctx.callbackQuery.data;
      if (action.startsWith('request_discount_')) {
        discountPercent = parseInt(action.replace('request_discount_', ''));
        await ctx.answerCbQuery();
      } else if (action === 'cancel_promo_request') {
        await ctx.answerCbQuery('–ó–∞–ø—Ä–æ—Å –æ—Ç–º–µ–Ω–µ–Ω');
        await ctx.scene.leave();
        return;
      }
    } else if (ctx.message?.text) {
      discountPercent = parseInt(ctx.message.text.trim());
      if (isNaN(discountPercent) || discountPercent < 0 || discountPercent > 50) {
        await messageManager.sendMessage(
          ctx,
          '‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç —Å–∫–∏–¥–∫–∏! –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 50:'
        );
        return;
      }
    } else {
      return;
    }

    ctx.wizard.state.discountPercent = discountPercent;
    
    await messageManager.sendMessage(
      ctx,
      `‚úÖ –°–∫–∏–¥–∫–∞: ${discountPercent}%

üî¢ –°–∫–æ–ª—å–∫–æ —Ä–∞–∑ –¥–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø—Ä–æ–º–æ–∫–æ–¥?

–ù–∞–ø—Ä–∏–º–µ—Ä:
10 - –ø—Ä–æ–º–æ–∫–æ–¥ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å 10 —Ä–∞–∑
100 - –ø—Ä–æ–º–æ–∫–æ–¥ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å 100 —Ä–∞–∑
0 - –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π`,
      Markup.inlineKeyboard([
        [Markup.button.callback('10 —Ä–∞–∑', 'request_limit_10')],
        [Markup.button.callback('50 —Ä–∞–∑', 'request_limit_50')],
        [Markup.button.callback('100 —Ä–∞–∑', 'request_limit_100')],
        [Markup.button.callback('–ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π', 'request_limit_0')],
        [Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∞', 'cancel_promo_request')]
      ])
    );
    return ctx.wizard.next();
  },

  // –®–∞–≥ 5: –û–ø–∏—Å–∞–Ω–∏–µ —Ü–µ–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞
  async (ctx) => {
    let usageLimit;
    
    if (ctx.callbackQuery) {
      const action = ctx.callbackQuery.data;
      if (action.startsWith('request_limit_')) {
        const limitValue = action.replace('request_limit_', '');
        usageLimit = limitValue === '0' ? null : parseInt(limitValue);
        await ctx.answerCbQuery();
      } else if (action === 'cancel_promo_request') {
        await ctx.answerCbQuery('–ó–∞–ø—Ä–æ—Å –æ—Ç–º–µ–Ω–µ–Ω');
        await ctx.scene.leave();
        return;
      }
    } else if (ctx.message?.text) {
      const input = ctx.message.text.trim();
      if (input === '0' || input.toLowerCase() === '–±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π') {
        usageLimit = null;
      } else {
        usageLimit = parseInt(input);
        if (isNaN(usageLimit) || usageLimit <= 0) {
          await messageManager.sendMessage(
            ctx,
            '‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ª–∏–º–∏—Ç! –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –∏–ª–∏ 0 –¥–ª—è –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π:'
          );
          return;
        }
      }
    } else {
      return;
    }

    ctx.wizard.state.usageLimit = usageLimit;
    
    await messageManager.sendMessage(
      ctx,
      `‚úÖ –õ–∏–º–∏—Ç: ${usageLimit || '–ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π'}

üìù –û–ø–∏—à–∏—Ç–µ –¥–ª—è —á–µ–≥–æ –≤–∞–º –Ω—É–∂–µ–Ω —ç—Ç–æ—Ç –ø—Ä–æ–º–æ–∫–æ–¥:

–ù–∞–ø—Ä–∏–º–µ—Ä:
- –î–ª—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –º–æ–µ–≥–æ –∫–∞–Ω–∞–ª–∞
- –î–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –º–æ–µ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
- –î–ª—è –¥—Ä—É–∑–µ–π –∏ –∑–Ω–∞–∫–æ–º—ã—Ö

–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –ø—Ä–∏–Ω—è—Ç—å —Ä–µ—à–µ–Ω–∏–µ.`,
      Markup.inlineKeyboard([
        [Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∞', 'cancel_promo_request')]
      ])
    );
    return ctx.wizard.next();
  },

  // –®–∞–≥ 6: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞
  async (ctx) => {
    if (!ctx.message?.text) {
      await messageManager.sendMessage(
        ctx,
        '‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ —Ü–µ–ª—å —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞ —Ç–µ–∫—Å—Ç–æ–º:'
      );
      return;
    }

    const description = ctx.message.text.trim();
    if (description.length < 10) {
      await messageManager.sendMessage(
        ctx,
        '‚ùå –û–ø–∏—Å–∞–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ (–º–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤):'
      );
      return;
    }

    ctx.wizard.state.description = description;
    const { promoCode, bonusDays, discountPercent, usageLimit } = ctx.wizard.state;
    
    const summaryMessage = `
üìã –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –ø—Ä–æ–º–æ–∫–æ–¥–∞

üé´ –ö–æ–¥: ${promoCode}
üìÖ –ë–æ–Ω—É—Å–Ω—ã–µ –¥–Ω–∏: ${bonusDays}
üí∞ –°–∫–∏–¥–∫–∞: ${discountPercent}%
üî¢ –õ–∏–º–∏—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π: ${usageLimit || '–ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π'}

üìù –û–ø–∏—Å–∞–Ω–∏–µ: ${description}

‚è≥ –ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å –±—É–¥–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.

–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å?`;

    await messageManager.sendMessage(
      ctx,
      summaryMessage,
      Markup.inlineKeyboard([
        [Markup.button.callback('‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å', 'confirm_promo_request')],
        [Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∞', 'cancel_promo_request')]
      ])
    );
    return ctx.wizard.next();
  },

  // –®–∞–≥ 7: –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞
  async (ctx) => {
    if (!ctx.callbackQuery) return;

    const action = ctx.callbackQuery.data;
    
    if (action === 'cancel_promo_request') {
      await ctx.answerCbQuery('–ó–∞–ø—Ä–æ—Å –æ—Ç–º–µ–Ω–µ–Ω');
      await ctx.scene.leave();
      return;
    }

    if (action === 'confirm_promo_request') {
      try {
        await ctx.answerCbQuery('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å...');
        
        const user = await User.findByTelegramId(ctx.from.id);
        const { promoCode, bonusDays, discountPercent, usageLimit, description } = ctx.wizard.state;

        // –°–æ–∑–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å
        const { data: request, error } = await supabase
          .from('promo_code_requests')
          .insert([{
            user_id: user.id,
            requested_code: promoCode,
            bonus_days: bonusDays,
            discount_percent: discountPercent,
            usage_limit: usageLimit,
            description: description
          }])
          .select()
          .single();

        if (error) throw error;

        const successMessage = `
‚úÖ –ó–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–æ–º–æ–∫–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!

üé´ –ü—Ä–æ–º–æ–∫–æ–¥: ${promoCode}
üìã –ù–æ–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞: ${request.id.substring(0, 8)}

‚è≥ –í–∞—à –∑–∞–ø—Ä–æ—Å –±—É–¥–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.
üì¨ –í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ –∑–∞–ø—Ä–æ—Å–∞.

üìä –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–ø—Ä–æ—Å–∞ –º–æ–∂–Ω–æ –≤ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ.`;

        await messageManager.sendMessage(
          ctx,
          successMessage,
          Markup.inlineKeyboard([
            [Markup.button.callback('üìä –ö —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ', 'referral_program')],
            [Markup.button.callback('üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'back_to_main')]
          ])
        );

        // –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –æ –Ω–æ–≤–æ–º –∑–∞–ø—Ä–æ—Å–µ
        try {
          console.log('üîî –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º...');
          await notifyAdminsAboutNewRequest(request, user);
          console.log('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã');
        } catch (notifyError) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º:', notifyError);
          // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        }

        console.log(`‚úÖ –ó–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–æ–º–æ–∫–æ–¥ ${promoCode} —Å–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ${ctx.from.id}`);

      } catch (error) {
        console.error('Error creating promo request:', error);
        
        let errorMessage = '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞';
        if (error?.message?.includes('duplicate key') || error?.code === '23505') {
          errorMessage = '‚ùå –ü—Ä–æ–º–æ–∫–æ–¥ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É–∂–µ –∑–∞–ø—Ä–æ—à–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ.';
        }
        
        await messageManager.sendMessage(ctx, errorMessage);
      }

      await ctx.scene.leave();
    }
  }
);

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã
promoRequestScene.action('cancel_promo_request', async (ctx) => {
  await ctx.answerCbQuery('–ó–∞–ø—Ä–æ—Å –æ—Ç–º–µ–Ω–µ–Ω');
  await messageManager.sendMessage(
    ctx,
    '–ó–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–æ–º–æ–∫–æ–¥ –æ—Ç–º–µ–Ω–µ–Ω',
    Markup.inlineKeyboard([
      [Markup.button.callback('üìä –ö —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ', 'referral_program')],
      [Markup.button.callback('üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'back_to_main')]
    ])
  );
  await ctx.scene.leave();
});

// –§—É–Ω–∫—Ü–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
async function notifyAdminsAboutNewRequest(request, user) {
  try {
    console.log('üìã –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤');
    console.log('üì¶ Request data:', { id: request.id, code: request.requested_code });
    console.log('üë§ User data:', { id: user.id, telegram_id: user.telegram_id });

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    const { data: admins, error: adminError } = await supabase
      .from('users')
      .select('telegram_id, first_name')
      .eq('role', 'admin');

    if (adminError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:', adminError);
      throw adminError;
    }

    console.log(`üë®‚Äçüíº –ù–∞–π–¥–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: ${admins?.length || 0}`);

    if (!admins || admins.length === 0) {
      console.log('‚ö†Ô∏è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
      return;
    }

    const userName = user.first_name || user.username || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
    const notificationMessage = `
üîî –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–æ–º–æ–∫–æ–¥!

üë§ –û—Ç: ${userName} (ID: ${user.telegram_id})
üé´ –ü—Ä–æ–º–æ–∫–æ–¥: ${request.requested_code}
üìÖ –î–Ω–∏: ${request.bonus_days} | üí∞ –°–∫–∏–¥–∫–∞: ${request.discount_percent}%
üî¢ –õ–∏–º–∏—Ç: ${request.usage_limit || '–ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π'}

üìù –û–ø–∏—Å–∞–Ω–∏–µ: ${request.description}

üìã ID –∑–∞–ø—Ä–æ—Å–∞: ${request.id.substring(0, 8)}

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /admin –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤.
    `;

    console.log('üìù –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º...');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ notificationService –Ω–∞—Å—Ç—Ä–æ–µ–Ω
    if (!notificationService || !notificationService.bot) {
      console.error('‚ùå NotificationService –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!');
      throw new Error('NotificationService not configured');
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—Å–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
    for (const admin of admins) {
      try {
        console.log(`üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É ${admin.telegram_id}`);
        await notificationService.sendAdminNotification(admin.telegram_id, notificationMessage);
        console.log(`‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É ${admin.telegram_id}`);
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É ${admin.telegram_id}:`, error);
      }
    }
  } catch (error) {
    console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:', error);
    throw error; // –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –Ω–∞–≤–µ—Ä—Ö –¥–ª—è –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
  }
}

export default promoRequestScene; 