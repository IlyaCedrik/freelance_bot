import { Scenes, Markup } from 'telegraf';
import Referral from '../../database/models/Referral.js';
import User from '../../database/models/User.js';
import messageManager from '../utils/messageManager.js';

const promoCodeScene = new Scenes.WizardScene(
  'CREATE_PROMO_CODE',
  
  // –®–∞–≥ 1: –í–≤–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞
  async (ctx) => {
    await messageManager.sendMessage(
      ctx,
      `üé´ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞

üìù –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞ (—Ç–æ–ª—å–∫–æ –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã, 3-20 —Å–∏–º–≤–æ–ª–æ–≤):

–ü—Ä–∏–º–µ—Ä: NEWUSER2024, DISCOUNT50, BONUS

‚ö†Ô∏è –ü—Ä–æ–º–æ–∫–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º`,
      Markup.inlineKeyboard([
        [Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∞', 'cancel_promo_creation')]
      ])
    );
    return ctx.wizard.next();
  },

  // –®–∞–≥ 2: –í–≤–æ–¥ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –±–æ–Ω—É—Å–Ω—ã—Ö –¥–Ω–µ–π
  async (ctx) => {
    const code = ctx.message?.text?.trim().toUpperCase();
    
    if (!code || !/^[A-Z0-9]{3,20}$/.test(code)) {
      await messageManager.sendMessage(
        ctx,
        '‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç! –ü—Ä–æ–º–æ–∫–æ–¥ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã (3-20 —Å–∏–º–≤–æ–ª–æ–≤)\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:'
      );
      return;
    }

    ctx.wizard.state.promoCode = code;
    
    await messageManager.sendMessage(
      ctx,
      `‚úÖ –ü—Ä–æ–º–æ–∫–æ–¥: ${code}

üìÖ –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–æ–Ω—É—Å–Ω—ã—Ö –¥–Ω–µ–π (0-30):

0 - –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–Ω–µ–π
7 - –Ω–µ–¥–µ–ª—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ  
14 - –¥–≤–µ –Ω–µ–¥–µ–ª–∏ –±–µ—Å–ø–ª–∞—Ç–Ω–æ
30 - –º–µ—Å—è—Ü –±–µ—Å–ø–ª–∞—Ç–Ω–æ`,
      Markup.inlineKeyboard([
        [Markup.button.callback('0 –¥–Ω–µ–π', 'promo_days_0')],
        [Markup.button.callback('7 –¥–Ω–µ–π', 'promo_days_7')],
        [Markup.button.callback('14 –¥–Ω–µ–π', 'promo_days_14')],
        [Markup.button.callback('30 –¥–Ω–µ–π', 'promo_days_30')],
        [Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∞', 'cancel_promo_creation')]
      ])
    );
    return ctx.wizard.next();
  },

  // –®–∞–≥ 3: –í–≤–æ–¥ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ —Å–∫–∏–¥–∫–∏
  async (ctx) => {
    let bonusDays;
    
    if (ctx.callbackQuery) {
      const action = ctx.callbackQuery.data;
      if (action.startsWith('promo_days_')) {
        bonusDays = parseInt(action.replace('promo_days_', ''));
        await ctx.answerCbQuery();
      } else if (action === 'cancel_promo_creation') {
        await ctx.answerCbQuery('–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ');
        await ctx.scene.leave();
        return;
      }
    } else if (ctx.message?.text) {
      bonusDays = parseInt(ctx.message.text.trim());
      if (isNaN(bonusDays) || bonusDays < 0 || bonusDays > 30) {
        await messageManager.sendMessage(
          ctx,
          '‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π! –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 30:'
        );
        return;
      }
    } else {
      return;
    }

    ctx.wizard.state.bonusDays = bonusDays;
    
    await messageManager.sendMessage(
      ctx,
      `‚úÖ –ë–æ–Ω—É—Å–Ω—ã–µ –¥–Ω–∏: ${bonusDays}

üí∞ –í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ—Ü–µ–Ω—Ç —Å–∫–∏–¥–∫–∏ (0-50%):

0 - –±–µ–∑ —Å–∫–∏–¥–∫–∏
10 - —Å–∫–∏–¥–∫–∞ 10%
25 - —Å–∫–∏–¥–∫–∞ 25%  
50 - —Å–∫–∏–¥–∫–∞ 50%`,
      Markup.inlineKeyboard([
        [Markup.button.callback('0%', 'promo_discount_0')],
        [Markup.button.callback('10%', 'promo_discount_10')],
        [Markup.button.callback('25%', 'promo_discount_25')],
        [Markup.button.callback('50%', 'promo_discount_50')],
        [Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∞', 'cancel_promo_creation')]
      ])
    );
    return ctx.wizard.next();
  },

  // –®–∞–≥ 4: –í–≤–æ–¥ –ª–∏–º–∏—Ç–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π
  async (ctx) => {
    let discountPercent;
    
    if (ctx.callbackQuery) {
      const action = ctx.callbackQuery.data;
      if (action.startsWith('promo_discount_')) {
        discountPercent = parseInt(action.replace('promo_discount_', ''));
        await ctx.answerCbQuery();
      } else if (action === 'cancel_promo_creation') {
        await ctx.answerCbQuery('–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ');
        await ctx.scene.leave();
        return;
      }
    } else if (ctx.message?.text) {
      discountPercent = parseInt(ctx.message.text.trim());
      if (isNaN(discountPercent) || discountPercent < 0 || discountPercent > 50) {
        await messageManager.sendMessage(
          ctx,
          '‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç —Å–∫–∏–¥–∫–∏! –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 50:'
        );
        return;
      }
    } else {
      return;
    }

    ctx.wizard.state.discountPercent = discountPercent;
    
    await messageManager.sendMessage(
      ctx,
      `‚úÖ –°–∫–∏–¥–∫–∞: ${discountPercent}%

üî¢ –í–≤–µ–¥–∏—Ç–µ –ª–∏–º–∏—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π:

–ù–∞–ø—Ä–∏–º–µ—Ä:
10 - –ø—Ä–æ–º–æ–∫–æ–¥ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å 10 —Ä–∞–∑
100 - –ø—Ä–æ–º–æ–∫–æ–¥ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å 100 —Ä–∞–∑
0 - –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π`,
      Markup.inlineKeyboard([
        [Markup.button.callback('10 —Ä–∞–∑', 'promo_limit_10')],
        [Markup.button.callback('50 —Ä–∞–∑', 'promo_limit_50')],
        [Markup.button.callback('100 —Ä–∞–∑', 'promo_limit_100')],
        [Markup.button.callback('–ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π', 'promo_limit_0')],
        [Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∞', 'cancel_promo_creation')]
      ])
    );
    return ctx.wizard.next();
  },

  // –®–∞–≥ 5: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞
  async (ctx) => {
    let usageLimit;
    
    if (ctx.callbackQuery) {
      const action = ctx.callbackQuery.data;
      if (action.startsWith('promo_limit_')) {
        const limitValue = action.replace('promo_limit_', '');
        usageLimit = limitValue === '0' ? null : parseInt(limitValue);
        await ctx.answerCbQuery();
      } else if (action === 'cancel_promo_creation') {
        await ctx.answerCbQuery('–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ');
        await ctx.scene.leave();
        return;
      }
    } else if (ctx.message?.text) {
      const input = ctx.message.text.trim();
      if (input === '0' || input.toLowerCase() === '–±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π') {
        usageLimit = null;
      } else {
        usageLimit = parseInt(input);
        if (isNaN(usageLimit) || usageLimit <= 0) {
          await messageManager.sendMessage(
            ctx,
            '‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ª–∏–º–∏—Ç! –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –∏–ª–∏ 0 –¥–ª—è –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π:'
          );
          return;
        }
      }
    } else {
      return;
    }

    const { promoCode, bonusDays, discountPercent } = ctx.wizard.state;
    
    const summaryMessage = `
üìã –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞

üé´ –ö–æ–¥: ${promoCode}
üìÖ –ë–æ–Ω—É—Å–Ω—ã–µ –¥–Ω–∏: ${bonusDays}
üí∞ –°–∫–∏–¥–∫–∞: ${discountPercent}%
üî¢ –õ–∏–º–∏—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π: ${usageLimit || '–ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π'}

–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥?`;

    await messageManager.sendMessage(
      ctx,
      summaryMessage,
      Markup.inlineKeyboard([
        [Markup.button.callback('‚úÖ –°–æ–∑–¥–∞—Ç—å', 'confirm_promo_creation')],
        [Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∞', 'cancel_promo_creation')]
      ])
    );

    ctx.wizard.state.usageLimit = usageLimit;
    return ctx.wizard.next();
  },

  // –®–∞–≥ 6: –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞
  async (ctx) => {
    if (!ctx.callbackQuery) return;

    const action = ctx.callbackQuery.data;
    
    if (action === 'cancel_promo_creation') {
      await ctx.answerCbQuery('–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ');
      await ctx.scene.leave();
      return;
    }

    if (action === 'confirm_promo_creation') {
      try {
        await ctx.answerCbQuery('–°–æ–∑–¥–∞–µ–º –ø—Ä–æ–º–æ–∫–æ–¥...');
        
        const user = await User.findByTelegramId(ctx.from.id);
        const { promoCode, bonusDays, discountPercent, usageLimit } = ctx.wizard.state;

        // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–º–æ–∫–æ–¥
        const createdPromo = await Referral.createPromoCode(user.id, {
          code: promoCode,
          bonusDays: bonusDays,
          discountPercent: discountPercent,
          usageLimit: usageLimit
        });

        const successMessage = `
üéâ –ü—Ä–æ–º–æ–∫–æ–¥ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!

üé´ –ö–æ–¥: \`${promoCode}\`
üìÖ –ë–æ–Ω—É—Å–Ω—ã–µ –¥–Ω–∏: ${bonusDays}
üí∞ –°–∫–∏–¥–∫–∞: ${discountPercent}%
üî¢ –õ–∏–º–∏—Ç: ${usageLimit || '–ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π'}

üì¢ –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –ø—Ä–æ–º–æ–∫–æ–¥–æ–º —Å –¥—Ä—É–∑—å—è–º–∏!
–û–Ω–∏ —Å–º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.

üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ.`;

        await messageManager.sendMessage(
          ctx,
          successMessage,
          Markup.inlineKeyboard([
            [Markup.button.callback('üìä –ö —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ', 'referral_program')],
            [Markup.button.callback('üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'back_to_main')]
          ]),
          { parse_mode: 'Markdown' }
        );

        console.log(`‚úÖ –ü—Ä–æ–º–æ–∫–æ–¥ ${promoCode} —Å–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ${ctx.from.id}`);

      } catch (error) {
        console.error('Error creating promo code:', error);
        
        let errorMessage = '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞';
        if (error.message.includes('duplicate key')) {
          errorMessage = '‚ùå –ü—Ä–æ–º–æ–∫–æ–¥ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ.';
        }
        
        await messageManager.sendMessage(ctx, errorMessage);
      }

      await ctx.scene.leave();
    }
  }
);

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞
promoCodeScene.action('cancel_promo_creation', async (ctx) => {
  await ctx.answerCbQuery('–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ');
  await messageManager.sendMessage(
    ctx,
    '–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ',
    Markup.inlineKeyboard([
      [Markup.button.callback('üìä –ö —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ', 'referral_program')],
      [Markup.button.callback('üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'back_to_main')]
    ])
  );
  await ctx.scene.leave();
});

export default promoCodeScene; 